<?xml version="1.0" encoding="UTF-8" ?>
<ContentPage
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:xct="clr-namespace:Xamarin.CommunityToolkit.Behaviors;assembly=Xamarin.CommunityToolkit"
    xmlns:viewmodels="clr-namespace:CoBCCanteen.ViewModels"
    x:Class="CoBCCanteen.Views.RegisterPage"
    x:DataType="viewmodels:RegisterPageViewModel"
    BackgroundColor="#ffffff"
    Shell.NavBarIsVisible="False"
    Shell.TabBarIsVisible="False"
    Shell.FlyoutBehavior="Disabled">
    <ContentPage.BindingContext>
        <viewmodels:RegisterPageViewModel/>
    </ContentPage.BindingContext>
    <ContentPage.Resources>
        <ResourceDictionary>
            <Style x:Key="InvalidEntryStyle" TargetType="Entry" >
                <Setter Property="TextColor" Value="{StaticResource SecondaryPink}" />
            </Style>
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Content>
        <StackLayout VerticalOptions="Center" HorizontalOptions="FillAndExpand" Padding="40">
            <Image Source="HeaderCoBC" HorizontalOptions="Center" HeightRequest="75" />
            <Label Text="Sign Up" FontSize="28" HorizontalOptions="Center" Margin="0, 25, 0, 10" />
            <Entry Placeholder="First Name" Text="{Binding Firstname, Mode=TwoWay}">
                <Entry.Behaviors>
                    <!--> Uses Xamarin Community Toolkit's Validation Behaviors for validating user input. <!-->
                    <xct:MultiValidationBehavior x:Name="FirstnameValidation" IsValid="{Binding IsFirstnameValid}" Errors="{Binding errorFirstname}" Flags="ForceMakeValidWhenFocused" InvalidStyle="{StaticResource InvalidEntryStyle}">
                        <xct:CharactersValidationBehavior
                            DecorationFlags="Trim"
                            MinimumCharacterCount="2"
                            xct:MultiValidationBehavior.Error="The value is too short."
                        />
                        <xct:CharactersValidationBehavior
                            DecorationFlags="Trim"
                            Flags="ValidateOnUnfocusing"
                            MaximumCharacterCount="64"
                            xct:MultiValidationBehavior.Error="The value must be less than 64 characters."
                        />
                        <xct:CharactersValidationBehavior
                            DecorationFlags="Trim"
                            RegexPattern="^[A-Za-z]+$"
                            xct:MultiValidationBehavior.Error="The value contains illegal character(s)."
                        />
                    </xct:MultiValidationBehavior>
                </Entry.Behaviors>
            </Entry>
            <Entry Placeholder="Last Name" Text="{Binding Lastname, Mode=TwoWay}">
                <Entry.Behaviors>
                    <xct:MultiValidationBehavior x:Name="LastnameValidation" IsValid="{Binding IsLastnameValid}" Errors="{Binding errorLastname}" Flags="ForceMakeValidWhenFocused" InvalidStyle="{StaticResource InvalidEntryStyle}">
                        <xct:CharactersValidationBehavior
                            DecorationFlags="Trim"
                            MinimumCharacterCount="2"
                            xct:MultiValidationBehavior.Error="The value is too short."
                        />
                        <xct:CharactersValidationBehavior
                            DecorationFlags="Trim"
                            Flags="ValidateOnUnfocusing"
                            MaximumCharacterCount="64"
                            xct:MultiValidationBehavior.Error="The value must be less than 64 characters."
                        />
                        <xct:CharactersValidationBehavior
                            DecorationFlags="Trim"
                            RegexPattern="^[A-Za-z]+$"
                            xct:MultiValidationBehavior.Error="The value contains illegal character(s)."
                        />
                    </xct:MultiValidationBehavior>
                </Entry.Behaviors>
            </Entry> 
            <Entry Placeholder="Student ID" Text="{Binding ID, Mode=TwoWay}" Keyboard="Numeric">
                <Entry.Behaviors>
                    <xct:MultiValidationBehavior x:Name="IDValidation" IsValid="{Binding IsIDValid}" Errors="{Binding errorID}" Flags="ForceMakeValidWhenFocused" InvalidStyle="{StaticResource InvalidEntryStyle}">
                        <xct:CharactersValidationBehavior
                            DecorationFlags="Trim"
                            CharacterType="Digit"
                            MaximumCharacterCount="6"
                            MinimumCharacterCount="6"
                            xct:MultiValidationBehavior.Error="The value must be 6 digits long."
                        />
                    </xct:MultiValidationBehavior>
                </Entry.Behaviors>
            </Entry>
            <Entry Placeholder="College Email" Text="{Binding Email, Mode=TwoWay}">
                <Entry.Behaviors>
                    <xct:MultiValidationBehavior x:Name="EmailValidation" IsValid="{Binding IsEmailValid}" Errors="{Binding errorEmail}" Flags="ForceMakeValidWhenFocused" InvalidStyle="{StaticResource InvalidEntryStyle}">
                        <xct:EmailValidationBehavior
                            DecorationFlags="Trim"
                            RegexPattern="^([A-Za-z0-9.]+)@((student.cityofbristol.ac.uk)|(cityofbristol.ac.uk))$"
                            MaximumLength="254"
                            xct:MultiValidationBehavior.Error="The entered email does not match a college email."
                        />
                    </xct:MultiValidationBehavior>
                </Entry.Behaviors>
            </Entry>
            <Entry x:Name="txtPassword" Placeholder="Password" Text="{Binding Password, Mode=TwoWay}" IsPassword="True">
                <Entry.Behaviors>
                    <xct:MultiValidationBehavior x:Name="PasswordValidation" IsValid="{Binding IsPasswordValid}" Errors="{Binding errorPassword}" Flags="ForceMakeValidWhenFocused" InvalidStyle="{StaticResource InvalidEntryStyle}">
                        <xct:CharactersValidationBehavior
                            DecorationFlags="Trim"
                            MinimumCharacterCount="8"
                            xct:MultiValidationBehavior.Error="The password must be 8 or more characters long."
                        />
                        <xct:CharactersValidationBehavior
                            DecorationFlags="Trim"
                            Flags="ValidateOnUnfocusing"
                            MaximumCharacterCount="32"
                            xct:MultiValidationBehavior.Error="The password must be 32 or less characters long."
                        />
                        <xct:CharactersValidationBehavior
                            DecorationFlags="Trim"
                            RegexPattern="^[a-zA-Z0-9~`!@#$%^\u0026*()_\-+={[}\]|:;\u0027\u0022\u003c,\u003e.?/]+$"
                            xct:MultiValidationBehavior.Error="The value contains illegal character(s)."
                        />
                    </xct:MultiValidationBehavior>
                </Entry.Behaviors>
            </Entry>
            <Entry Placeholder="Confirm Password" IsPassword="True" >
                <Entry.Behaviors>
                    <xct:MultiValidationBehavior x:Name="PasswordConfirmValidation" IsValid="{Binding IsPasswordConfirmValid}" Errors="{Binding errorPasswordConfirm}" Flags="ForceMakeValidWhenFocused" InvalidStyle="{StaticResource InvalidEntryStyle}">
                        <xct:RequiredStringValidationBehavior
                            RequiredString="{Binding Source={x:Reference txtPassword}, Path=Text}"
                            xct:MultiValidationBehavior.Error="The passwords do not match."
                        />
                    </xct:MultiValidationBehavior>
                </Entry.Behaviors>
            </Entry>
            <Button Clicked="btnRegister_Clicked" Text="Sign Up" Style="{StaticResource PrimaryButtonStyle}" Margin="0, 5, 0, 25" />
            <Label Text="Already have an account? Login here" Style="{StaticResource PrimaryLabelLinkStyle}">
                <Label.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding DisplayLogin}"/>
                </Label.GestureRecognizers>
            </Label>
        </StackLayout>
    </ContentPage.Content>
</ContentPage>

